{"version":3,"sources":["Story.js","ModalStory.js","Slider.js","ModalPost.js","Loader.js","Landing.js","App.js","serviceWorker.js","index.js"],"names":["Story","props","react_default","a","createElement","className","story","fname","charAt","lname","headline","content","length","concat","substring","onClick","storyOpenModal","addlike","likes","ModalStory","onClose","Slider","_this","this","lib_default","direction","paginationClickable","autoplay","autoplayDisableOnInteraction","loop","sliders","map","slider","i","key","style","backgroundImage","onOpenModal","Component","ModalPost","type","name","required","onChange","handleChange","rows","handleSubmit","message","Load","react_loader_spinner_default","color","height","width","React","Landing","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","postopen","onCloseModal","storyopen","display","storyCloseModal","console","log","state","fields","username","gender","contetn","stories","bind","assertThisInitialized","displayStory","axios","get","then","response","data","results","forEach","element","push","urls","full","err","e","target","value","preventDefault","_this$state","find","_this2","_this$state2","src_Slider","src_Story","index_es","open","center","src_ModalStory","src_ModalPost","Loader_Load","App","src_Landing","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7034caf7.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Story = props => (\n  <div className=\"story\">\n    <div className=\"story__dp\">\n      <p>\n        {props.story.fname.charAt(0)}\n        {props.story.lname.charAt(0)}\n      </p>\n    </div>\n    <div className=\"story__headline\">{props.story && props.story.headline}</div>\n    <div className=\"story__content\">{props.story.content.length > 100 ? `${props.story.content.length.substring(0, 100)}.....` : props.story.content}</div>\n    <div className=\"story__more\" onClick={props.storyOpenModal}>\n      Read more\n    </div>\n    <div className=\"story__likes\">\n      <p onClick={props.addlike}>\n        <i className=\"far fa-heart\" />\n      </p>\n      <p>{props.story.likes}</p>\n    </div>\n  </div>\n);\n\nexport default Story;\n","import React from \"react\";\n\nconst ModalStory = props => (\n  <div className=\"modal\">\n    <span onClick={props.onClose}>&times;</span>\n    <div className=\"story\">\n      <div className=\"story__dp\">\n        <p>\n          {props.story.fname.charAt(0)}\n          {props.story.lname.charAt(0)}\n        </p>\n      </div>\n      <div className=\"story__headline\">{props.story.headline}</div>\n      <div className=\"story__content\">{props.story.content}</div>\n      <div className=\"story__likes\">\n        <p onClick={props.addlike}>\n          <i className=\"far fa-heart\" />\n        </p>\n        <p>{props.story.likes}</p>\n      </div>\n    </div>\n  </div>\n);\n\nexport default ModalStory;\n","import React, { Component } from \"react\";\nimport Swiper from \"react-id-swiper\";\n\nclass Slider extends Component {\n  render() {\n    // const params = {\n    //   spaceBetween: 30,\n    //   centeredSlides: true,\n    //   autoplay: {\n    //     // delay: 200,\n    //     disableOnInteraction: false\n    //   },\n    //   navigation: {\n    //     nextEl: \".swiper-button-next\",\n    //     prevEl: \".swiper-button-prev\"\n    //   }\n    // };\n    const params = {\n      direction: \"horizontal\",\n      paginationClickable: true,\n      autoplay: 1000,\n      autoplayDisableOnInteraction: false,\n      loop: true\n    };\n\n    return (\n      <div className=\"container container--full-width\">\n        <div className=\"slider\">\n          <Swiper {...params}>\n            {this.props.sliders.map((slider, i) => {\n              return (\n                <div key={i} style={{ backgroundImage: \"url(\" + slider + \")\" }}>\n                  {/* <img height={500} alt={`homeslier${i}`} src={slider} /> */}\n                  <div className=\"overlay\" />\n                  <div className=\"container container--md\">\n                    <h2>Val Memoirs</h2>\n                    <button className=\"btn\" onClick={this.props.onOpenModal}>\n                      Add story\n                    </button>\n                    <div>\n                      <p>Scroll down</p>\n                      <i className=\"fas fa-caret-down\" />\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </Swiper>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Slider;\n","import React from \"react\";\n\nconst ModalPost = props => (\n  <div className=\"modal\">\n    <span onClick={props.onClose}>&times;</span>\n    <div className=\"form\">\n      <div className=\"form__bar\">\n        <div className=\"form__left\">\n          <div className=\"form__control\">\n            <label className=\"form__label\">First Name</label>\n            <input\n              className=\"form__field form__field--fullwidth\"\n              type=\"text\"\n              name=\"fname\"\n              required\n              onChange={props.handleChange}\n            />\n          </div>\n          <div className=\"form__control\">\n            <label className=\"form__label\">Last Name</label>\n            <input\n              className=\"form__field form__field--fullwidth\"\n              type=\"text\"\n              name=\"lname\"\n              required\n              onChange={props.handleChange}\n            />\n          </div>\n          <div className=\"form__control\">\n            <label className=\"form__label\">Username</label>\n            <input\n              className=\"form__field form__field--fullwidth\"\n              type=\"text\"\n              name=\"username\"\n              required\n              onChange={props.handleChange}\n            />\n          </div>\n          <div className=\"form__control\">\n            <label className=\"form__label\">Gender</label>\n            <input\n              className=\"form__field form__field--fullwidth\"\n              type=\"text\"\n              name=\"gender\"\n              required\n              onChange={props.handleChange}\n            />\n          </div>\n        </div>\n        <div className=\"form__right\">\n          <div className=\"form__control\">\n            <label className=\"form__label\">Headline</label>\n            <input\n              className=\"form__field form__field--fullwidth\"\n              type=\"text\"\n              name=\"headline\"\n              required\n              onChange={props.handleChange}\n            />\n          </div>\n\n          <div className=\"form__control\">\n            <label className=\"form__label\">Story</label>\n            <textarea\n              className=\"form__field form__field--fullwidth form__field--border\"\n              rows=\"10\"\n              name=\"content\"\n              onChange={props.handleChange}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"form__control\">\n        <button type=\"submit\" className=\"btn btn--green\" onClick={props.handleSubmit}>\n          save\n        </button>\n      </div>\n\n      {props.message}\n    </div>\n  </div>\n);\n\nexport default ModalPost;\n","import React from \"react\";\nimport Loader from \"react-loader-spinner\";\n\nexport default class Load extends React.Component {\n  render() {\n    return <Loader type=\"Hearts\" color=\"#d54040\" height=\"150\" width=\"150\" />;\n  }\n}\n","import React, { Component } from \"react\";\nimport Story from \"./Story\";\nimport ModalStory from \"./ModalStory\";\nimport Slider from \"./Slider\";\nimport ModalPost from \"./ModalPost\";\nimport Load from \"./Loader\";\nimport axios from \"axios\";\nimport Modal from \"react-responsive-modal\";\n\nclass Landing extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      postopen: false,\n      storyopen: false,\n      sliders: [],\n      fields: {\n        fname: \"\",\n        lname: \"\",\n        username: \"\",\n        gender: \"\",\n        headline: \"\",\n        contetn: \"\"\n      },\n      message: \"\",\n      display: 1,\n      stories: [\n        {\n          fname: \"Joshua\",\n          lname: \"Oluikpe\",\n          username: \"dagenius\",\n          gender: \"male\",\n          headline: \"My Own\",\n          content:\n            \"djfgdfndufnd jdfjdnjfnd dbnfdnfdbnf dfbndhfbdfhbdb dbfnhdbfbd dbfhbdfhb\",\n          likes: 2\n        },\n        {\n          fname: \"Joshua\",\n          lname: \"Oluikpe\",\n          username: \"dagenius\",\n          gender: \"male\",\n          headline: \"My my\",\n          content:\n            \"djfgdfndufnd jdfjdnjfnd dbnfdnfdbnf dfbndhfbdfhbdb dbfnhdbfbd dbfhbdfhb\",\n          likes: 2\n        },\n        {\n          fname: \"Joshua\",\n          lname: \"Oluikpe\",\n          username: \"dagenius\",\n          gender: \"male\",\n          headline: \"Why\",\n          content:\n            \"djfgdfndufnd jdfjdnjfnd dbnfdnfdbnf dfbndhfbdfhbdb dbfnhdbfbd dbfhbdfhb\",\n          likes: 2\n        }\n      ]\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.addlike = this.addlike.bind(this);\n    this.displayStory = this.displayStory.bind(this);\n  }\n\n  componentDidMount() {\n    const _this = this;\n    const client_id =\n      \"a4e4a8535d95f90e5a55abc40b6ccc249f2f22034bd9a2e2c4c89483a222c849\";\n    axios\n      .get(\n        `https://api.unsplash.com/search/photos/?client_id=${client_id}&page=1&query=valentine&per_page=5&orientation=landscape`\n      )\n      .then(\n        function(response) {\n          let { sliders } = _this.state;\n          response.data.results.forEach(element => {\n            sliders.push(element.urls.full);\n          });\n          _this.setState({ sliders });\n        },\n        function(err) {\n          console.log(err.response);\n        }\n      );\n  }\n\n  handleChange(e) {\n    let { fields } = this.state;\n    fields[e.target.name] = e.target.value;\n    this.setState({\n      fields\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    let { fields, stories } = this.state;\n    let isFound = stories.find(function(element) {\n      return element.username === fields.username;\n    });\n    if (isFound) {\n      this.setState({\n        message: \"Username has posted before\"\n      });\n    } else {\n      fields[\"likes\"] = 0;\n      stories.push(fields);\n      this.setState({\n        stories,\n        postopen: false\n      });\n    }\n  }\n  displayStory(i) {\n    this.setState({\n      display: i\n    });\n  }\n  addlike(i) {\n    let { stories } = this.state;\n    stories[i].likes += 1;\n    this.setState({\n      stories\n    });\n  }\n  onOpenModal = () => {\n    this.setState({ postopen: true });\n  };\n\n  onCloseModal = () => {\n    this.setState({ postopen: false });\n  };\n\n  storyOpenModal = i => {\n   \n    this.setState({ storyopen: true, display: i });\n  };\n\n  storyCloseModal = () => {\n    console.log('hello');\n    this.setState({ storyopen: false });\n  };\n\n  render() {\n    const { postopen, storyopen } = this.state;\n    return (\n      <div>\n        {this.state.stories.length !== 0 ? (\n          <div>\n            <Slider\n              sliders={this.state.sliders}\n              onOpenModal={this.onOpenModal}\n            />\n            <div className=\"stories container container--sd\">\n              {this.state.stories.map((story, i) => {\n                return (\n                  <div key={i}>\n                    <Story\n                      story={story}\n                      key={i}\n                      addlike={() => this.addlike(i)}\n                      storyOpenModal={() => this.storyOpenModal(i)}\n                    />\n                  </div>\n                );\n              })}\n              <Modal open={storyopen} onClose={this.storyCloseModal} center>\n                <ModalStory\n                  story={this.state.stories[this.state.display]}\n                  onClose={this.storyCloseModal}\n                />\n              </Modal>\n              <Modal open={postopen} onClose={this.onCloseModal} center>\n                <ModalPost\n                  handleChange={this.handleChange}\n                  handleSubmit={this.handleSubmit}\n                  onClose={this.onCloseModal}\n                  message={this.state.message}\n                />\n              </Modal>\n            </div>\n          </div>\n        ) : (\n          <div className=\"loader__page\">\n            <Load />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Landing;\n","import React, { Component } from \"react\";\nimport \"./App.scss\";\nimport Landing from \"./Landing\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Landing />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import \"bootstrap/dist/css/bootstrap.css\";\n// import \"assets/vendor/scss/paper-dashboard.css\";\n// import \"assets/vendor/demo/demo.css\";\nimport \"react-id-swiper/src/styles/css/swiper.css\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}